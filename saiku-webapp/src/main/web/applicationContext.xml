<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" 
     xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
              http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd
              http://www.springframework.org/schema/security/oauth2 http://www.springframework.org/schema/security/spring-security-oauth2.xsd
			   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			   http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<context:annotation-config />

	<security:global-method-security secured-annotations="enabled">
	</security:global-method-security>

	<bean id="org.springframework.security.filterChainProxy"
		class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/**"
				filters="httpSessionContextIntegrationFilter,digestProcessingFilter,exceptionTranslationFilter,filterSecurityInterceptor" />
		</security:filter-chain-map>
	</bean>


	<bean id="filterSecurityInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager" ref="authenticationManager" />
		<property name="accessDecisionManager" ref="accessDecisionManager" />
		<property name="objectDefinitionSource">
			<security:filter-invocation-definition-source>
				<security:intercept-url pattern="/**" access="ROLE_USER" />
			</security:filter-invocation-definition-source>
		</property>
	</bean>

	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions"
			value="false" />
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
			</list>
		</property>
	</bean>

	<bean id="httpSessionContextIntegrationFilter"
		class="org.springframework.security.web.context.HttpSessionContextIntegrationFilter" />
	<bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint" ref="digestProcessingFilterEntryPoint" />
	</bean>

	<bean id="digestProcessingFilter"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="authenticationEntryPoint" ref="digestProcessingFilterEntryPoint" />
		<!-- <beans:property name="userCache" ref="userCache"/>-->
	</bean>

	<bean id="digestProcessingFilterEntryPoint"
		class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
		<property name="realmName"
			value="Contacts Realm via Digest Authentication" />
		<property name="key" value="acegi" />
		<property name="nonceValiditySeconds" value="10" />
	</bean>

	<bean id="userDetailsService"
		class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
		<property name="userProperties">
			<bean
				class="org.springframework.beans.factory.config.PropertiesFactoryBean">
				<property name="location" value="/WEB-INF/users.properties" />

			</bean>
		</property>
	</bean>

	<security:authentication-manager alias="authenticationManager">

		<security:authentication-provider>
			<security:user-service id="uds" properties="/WEB-INF/users.properties">

			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
