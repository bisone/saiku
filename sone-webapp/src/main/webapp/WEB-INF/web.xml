<?xml version="1.0" encoding="UTF-8"?>
<web-app>

  <display-name>saiku</display-name>

  <context-param>
		<param-name>encoding</param-name>
		<param-value>UTF-8</param-value>
	</context-param>

  <context-param>
        <param-name>db.url</param-name>
        <param-value>jdbc:h2:../../data/saiku;MODE=MySQL</param-value>
    </context-param>

  <context-param>
        <param-name>db.user</param-name>
        <param-value>sa</param-value>
    </context-param>

  <context-param>
        <param-name>db.password</param-name>
        <param-value />
    </context-param>

  <context-param>
        <param-name>foodmart.url</param-name>
        <param-value>jdbc:h2:../../data/foodmart;MODE=MySQL</param-value>
    </context-param>

  <context-param>
        <param-name>foodmart.user</param-name>
        <param-value>sa</param-value>
    </context-param>

  <context-param>
        <param-name>foodmart.password</param-name>
        <param-value />
    </context-param>

  <context-param>
        <param-name>db.tcpServer</param-name>
        <param-value>-tcpAllowOthers</param-value>
    </context-param>

  <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>/WEB-INF/applicationContext.xml</param-value>
    </context-param>

  <filter>
		<filter-name>org.springframework.security.filterChainProxy</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

  <filter>
    <filter-name>http-request-context</filter-name>
    <filter-class>org.codehaus.enunciate.webapp.HTTPRequestContextFilter</filter-class>
  </filter>

  <filter-mapping>
		<filter-name>org.springframework.security.filterChainProxy</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

  <filter-mapping>
    <filter-name>http-request-context</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>

  <listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener
		</listener-class>
	</listener>

  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>org.codehaus.enunciate.modules.spring_app.SpringComponentPostProcessor</listener-class>
  </listener>

  <servlet>
		<servlet-name>spring</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	</servlet>

  <servlet>
        <servlet-name>Webdav</servlet-name>
        <description>
            The webdav servlet that connects HTTP request to the repository.
        </description>
        <servlet-class>org.saiku.repository.SaikuWebdavServlet</servlet-class>
        <init-param>
            <param-name>resource-path-prefix</param-name>
            <param-value>/repository</param-value>
            <description>
                defines the prefix for spooling resources out of the repository.
            </description>
        </init-param>
        <init-param>
            <param-name>resource-config</param-name>
            <param-value>/WEB-INF/config.xml</param-value>
            <description>
                Defines various dav-resource configuration parameters.
            </description>
        </init-param>


        <load-on-startup>4</load-on-startup>
    </servlet>

  <!-- <servlet> -->
  <!--       <servlet-name>RMI</servlet-name> -->
  <!--       <servlet-class>org.apache.jackrabbit.servlet.remote.RemoteBindingServlet</servlet-class> -->
  <!--   </servlet> -->

  <servlet>
        <servlet-name>H2Console</servlet-name>
        <servlet-class>org.h2.server.web.WebServlet</servlet-class>
        
        <load-on-startup>1</load-on-startup>
    </servlet>

  <servlet>
    	<servlet-name>jersey2</servlet-name>
    	<servlet-class>org.codehaus.enunciate.modules.jersey.EnunciateJerseyServletContainer</servlet-class>
    	<init-param>
      		<param-name>com.sun.jersey.config.property.packages</param-name>
      		<param-value>org.saiku.web</param-value>
    	</init-param>
    	<init-param>
      		<param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
      		<param-value>com.sun.jersey.api.container.filter.PostReplaceFilter</param-value>
    	</init-param>

    	<init-param>
      		<param-name>org.codehaus.enunciate.modules.jersey.config.ServletPath</param-name>
      		<param-value>/rest</param-value>
    	</init-param>
    	<load-on-startup>1</load-on-startup>
  	</servlet>

  <servlet-mapping>
        <servlet-name>Webdav</servlet-name>
        <url-pattern>/repository/*</url-pattern>
    </servlet-mapping>

  <!-- <servlet-mapping> -->
  <!--       <servlet-name>RMI</servlet-name> -->
  <!--       <url-pattern>/rmi</url-pattern> -->
  <!--   </servlet-mapping> -->

  <servlet-mapping>
        <servlet-name>H2Console</servlet-name>
        <url-pattern>/console/*</url-pattern>
    </servlet-mapping>

  <servlet-mapping>
	    <servlet-name>jersey2</servlet-name>
	    <url-pattern>/rest/saiku/*</url-pattern>
	  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>jersey2</servlet-name>
    <url-pattern>/rest/saiku/session</url-pattern>
  </servlet-mapping>

  <session-config>
		<session-timeout>60</session-timeout>
	</session-config>

  <mime-mapping>
    <extension>wsdl</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

  <mime-mapping>
    <extension>xsd</extension>
    <mime-type>text/xml</mime-type>
  </mime-mapping>

</web-app>
